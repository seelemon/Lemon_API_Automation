<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="13" ignored="6" total="72" passed="53">
  <reporter-output>
  </reporter-output>
  <suite name="接口1" duration-ms="10313" started-at="2021-09-19T16:07:28Z" finished-at="2021-09-19T16:07:38Z">
    <groups>
    </groups>
    <test name="C:/Users/SEMON/IdeaProjects/Java_project" duration-ms="10313" started-at="2021-09-19T16:07:28Z" finished-at="2021-09-19T16:07:38Z">
      <class name="com.lemon.testcase.LemonGetUserInfo">
        <test-method status="PASS" signature="setup()[pri:0, instance:com.lemon.testcase.LemonGetUserInfo@38394dc3]" name="setup" is-config="true" duration-ms="42" started-at="2021-09-19T16:07:34Z" finished-at="2021-09-19T16:07:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="testGetUserInfo(com.lemon.until.ExcelData)[pri:0, instance:com.lemon.testcase.LemonGetUserInfo@38394dc3]" name="testGetUserInfo" duration-ms="83" started-at="2021-09-19T16:07:34Z" data-provider="getData" finished-at="2021-09-19T16:07:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[ExcelData{case_id=1, module='getUserInfo', title='获取用户信息', method='Get', address='/member/1236912914/info', headers='{"Authorization":"Bearer eyJhbGciOiJIUzUxMiJ9.eyJtZW1iZXJfaWQiOjEyMzY5MTI5MTQsImV4cCI6MTYzMjA2Nzk1M30.TrbjNvfmvaLipQYjk8n4yEI2TLBQRoHhGF74-ZxVvzRDPs43bFT8DqEmVL9QoM-Ji0ftwYah-jrogLoDWkcbiQ","X-Lemonban-Media-Type":"lemonban.v2","Content-Type":"application/json;Charset=utf-8"}', data='null', expect='{ 
"code": 0,
 "msg": "OK",
"data.id":1236912914
}', sqlCheck='null'}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetUserInfo -->
        <test-method status="PASS" signature="testGetUserInfo(com.lemon.until.ExcelData)[pri:0, instance:com.lemon.testcase.LemonGetUserInfo@38394dc3]" name="testGetUserInfo" duration-ms="53" started-at="2021-09-19T16:07:34Z" data-provider="getData" finished-at="2021-09-19T16:07:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[ExcelData{case_id=2, module='getUserInfo', title='token过期', method='Get', address='/member/1236912914/info', headers='{"Authorization":"Bearer eyJhbGciOiJIUzUxMiJ9.eyJtZW1iZXJfaWQiOjEyMzYyMjc5NywiZXhwIjoxNjMxMjU3MzM2fQ.Qf41BZHn3E9flDCIpqBSkr9BSAdawZSs_0Z8wnOE0PaGHOTny9E4aXDrl4aiXBiWm_oPpysg5kwEfUZXSDsOTw","X-Lemonban-Media-Type":"lemonban.v2","Content-Type":"application/json;Charset=utf-8"}', data='null', expect='{ 
"code": 1003,
 "msg": "token已过期"
}', sqlCheck='null'}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetUserInfo -->
        <test-method status="PASS" signature="testGetUserInfo(com.lemon.until.ExcelData)[pri:0, instance:com.lemon.testcase.LemonGetUserInfo@38394dc3]" name="testGetUserInfo" duration-ms="51" started-at="2021-09-19T16:07:34Z" data-provider="getData" finished-at="2021-09-19T16:07:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[ExcelData{case_id=3, module='getUserInfo', title='token不存在', method='Get', address='/member/1236912914/info', headers='{"Authorization":"Bearer ","X-Lemonban-Media-Type":"lemonban.v2","Content-Type":"application/json;Charset=utf-8"}', data='null', expect='{ 
"code": 1003,
 "msg": "无法解析的JSON值，请检查token或Authorization请求头"
}', sqlCheck='null'}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetUserInfo -->
      </class> <!-- com.lemon.testcase.LemonGetUserInfo -->
      <class name="com.lemon.testcase.LemonRegister">
        <test-method status="PASS" signature="setUpGlobalStep()[pri:0, instance:com.lemon.testcase.LemonRegister@5d6b5d3d]" name="setUpGlobalStep" is-config="true" duration-ms="337" started-at="2021-09-19T16:07:28Z" finished-at="2021-09-19T16:07:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpGlobalStep -->
        <test-method status="PASS" signature="setup()[pri:0, instance:com.lemon.testcase.LemonRegister@5d6b5d3d]" name="setup" is-config="true" duration-ms="405" started-at="2021-09-19T16:07:28Z" finished-at="2021-09-19T16:07:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="FAIL" signature="testRegister(com.lemon.until.ExcelData)[pri:0, instance:com.lemon.testcase.LemonRegister@5d6b5d3d]" name="testRegister" duration-ms="2078" started-at="2021-09-19T16:07:29Z" data-provider="getData" finished-at="2021-09-19T16:07:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[ExcelData{case_id=1, module='register', title='11位未注册手机号，8位密码注册投资人', method='post', address='/member/register', headers='{"Content-Type":"application/json;Charset=utf-8","X-Lemonban-Media-Type":"lemonban.v2"}', data='{
 "mobile_phone":"13123302546",
 "pwd":"12345678"
}', expect='{ 
"code": 0,
 "msg": "OK",
"data.mobile_phone":"13123302546"
}', sqlCheck='{"select count(*) from member where mobile_phone = 13123302546":1
}'}]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.NullPointerException">
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException
at io.qameta.allure.Allure.addAttachment(Allure.java:392)
at com.lemon.testcase.LemonRegister.testRegister(LemonRegister.java:114)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:497)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:497)
at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray2(ReflectionUtils.java:206)
at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:161)
at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:84)
at org.apache.maven.plugin.surefire.InPluginVMSurefireStarter.runSuitesInProcess(InPluginVMSurefireStarter.java:87)
at org.apache.maven.plugin.surefire.AbstractSurefireMojo.executeProvider(AbstractSurefireMojo.java:1166)
at org.apache.maven.plugin.surefire.AbstractSurefireMojo.executeAfterPreconditionsChecked(AbstractSurefireMojo.java:1011)
at org.apache.maven.plugin.surefire.AbstractSurefireMojo.execute(AbstractSurefireMojo.java:857)
at org.apache.maven.plugin.DefaultBuildPluginManager.executeMojo(DefaultBuildPluginManager.java:137)
at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:210)
at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:156)
at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:148)
at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:117)
at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:81)
at org.apache.maven.lifecycle.internal.builder.singlethreaded.SingleThreadedBuilder.build(SingleThreadedBuilder.java:56)
at org.apache.maven.lifecycle.internal.LifecycleStarter.execute(LifecycleStarter.java:128)
at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:305)
at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:192)
at org.apache.maven.DefaultMaven.execute(DefaultMaven.java:105)
at org.apache.maven.cli.MavenCli.execute(MavenCli.java:957)
at org.apache.maven.cli.MavenCli.doMain(MavenCli.java:289)
at org.apache.maven.cli.MavenCli.main(MavenCli.java:193)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:497)
at org.codehaus.plexus.classworlds.launcher.Launcher.launchEnhanced(Launcher.java:282)
at org.codehaus.plexus.classworlds.launcher.Launcher.launch(Launcher.java:225)
at org.codehaus.plexus.classworlds.launcher.Launcher.mainWithExitCode(Launcher.java:406)
at org.codehaus.plexus.classworlds.launcher.Launcher.main(Launcher.java:347)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRegister -->
        <test-method status="FAIL" signature="testRegister(com.lemon.until.ExcelData)[pri:0, instance:com.lemon.testcase.LemonRegister@5d6b5d3d]" name="testRegister" duration-ms="488" started-at="2021-09-19T16:07:31Z" data-provider="getData" finished-at="2021-09-19T16:07:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[ExcelData{case_id=2, module='register', title='11位未注册手机号，16位密码注册借款人', method='post', address='/member/register', headers='{"Content-Type":"application/json;Charset=utf-8","X-Lemonban-Media-Type":"lemonban.v2"}', data='{
 "mobile_phone":"13135263576",
 "pwd":"1234567812345678"
}', expect='{ 
"code": 0,
 "msg": "OK",
"data.mobile_phone":"13135263576"
}', sqlCheck='{"select count(*) from member where mobile_phone = 13135263576":1
}'}]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.NullPointerException">
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException
at io.qameta.allure.Allure.addAttachment(Allure.java:392)
at com.lemon.testcase.LemonRegister.testRegister(LemonRegister.java:114)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:497)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:497)
at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray2(ReflectionUtils.java:206)
at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:161)
at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:84)
at org.apache.maven.plugin.surefire.InPluginVMSurefireStarter.runSuitesInProcess(InPluginVMSurefireStarter.java:87)
at org.apache.maven.plugin.surefire.AbstractSurefireMojo.executeProvider(AbstractSurefireMojo.java:1166)
at org.apache.maven.plugin.surefire.AbstractSurefireMojo.executeAfterPreconditionsChecked(AbstractSurefireMojo.java:1011)
at org.apache.maven.plugin.surefire.AbstractSurefireMojo.execute(AbstractSurefireMojo.java:857)
at org.apache.maven.plugin.DefaultBuildPluginManager.executeMojo(DefaultBuildPluginManager.java:137)
at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:210)
at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:156)
at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:148)
at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:117)
at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:81)
at org.apache.maven.lifecycle.internal.builder.singlethreaded.SingleThreadedBuilder.build(SingleThreadedBuilder.java:56)
at org.apache.maven.lifecycle.internal.LifecycleStarter.execute(LifecycleStarter.java:128)
at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:305)
at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:192)
at org.apache.maven.DefaultMaven.execute(DefaultMaven.java:105)
at org.apache.maven.cli.MavenCli.execute(MavenCli.java:957)
at org.apache.maven.cli.MavenCli.doMain(MavenCli.java:289)
at org.apache.maven.cli.MavenCli.main(MavenCli.java:193)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:497)
at org.codehaus.plexus.classworlds.launcher.Launcher.launchEnhanced(Launcher.java:282)
at org.codehaus.plexus.classworlds.launcher.Launcher.launch(Launcher.java:225)
at org.codehaus.plexus.classworlds.launcher.Launcher.mainWithExitCode(Launcher.java:406)
at org.codehaus.plexus.classworlds.launcher.Launcher.main(Launcher.java:347)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRegister -->
        <test-method status="FAIL" signature="testRegister(com.lemon.until.ExcelData)[pri:0, instance:com.lemon.testcase.LemonRegister@5d6b5d3d]" name="testRegister" duration-ms="487" started-at="2021-09-19T16:07:31Z" data-provider="getData" finished-at="2021-09-19T16:07:32Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[ExcelData{case_id=3, module='register', title='11位未注册手机号，注册管理员', method='post', address='/member/register', headers='{"Content-Type":"application/json;Charset=utf-8","X-Lemonban-Media-Type":"lemonban.v2"}', data='{
 "mobile_phone":"13113643266",
 "pwd":"12345678",
"type":"0"
}', expect='{ 
"code": 0,
 "msg": "OK",
"data.mobile_phone":"13113643266"
}', sqlCheck='{"select count(*) from member where mobile_phone = 13113643266":1
}'}]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.NullPointerException">
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException
at io.qameta.allure.Allure.addAttachment(Allure.java:392)
at com.lemon.testcase.LemonRegister.testRegister(LemonRegister.java:114)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:497)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:497)
at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray2(ReflectionUtils.java:206)
at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:161)
at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:84)
at org.apache.maven.plugin.surefire.InPluginVMSurefireStarter.runSuitesInProcess(InPluginVMSurefireStarter.java:87)
at org.apache.maven.plugin.surefire.AbstractSurefireMojo.executeProvider(AbstractSurefireMojo.java:1166)
at org.apache.maven.plugin.surefire.AbstractSurefireMojo.executeAfterPreconditionsChecked(AbstractSurefireMojo.java:1011)
at org.apache.maven.plugin.surefire.AbstractSurefireMojo.execute(AbstractSurefireMojo.java:857)
at org.apache.maven.plugin.DefaultBuildPluginManager.executeMojo(DefaultBuildPluginManager.java:137)
at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:210)
at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:156)
at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:148)
at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:117)
at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:81)
at org.apache.maven.lifecycle.internal.builder.singlethreaded.SingleThreadedBuilder.build(SingleThreadedBuilder.java:56)
at org.apache.maven.lifecycle.internal.LifecycleStarter.execute(LifecycleStarter.java:128)
at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:305)
at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:192)
at org.apache.maven.DefaultMaven.execute(DefaultMaven.java:105)
at org.apache.maven.cli.MavenCli.execute(MavenCli.java:957)
at org.apache.maven.cli.MavenCli.doMain(MavenCli.java:289)
at org.apache.maven.cli.MavenCli.main(MavenCli.java:193)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:497)
at org.codehaus.plexus.classworlds.launcher.Launcher.launchEnhanced(Launcher.java:282)
at org.codehaus.plexus.classworlds.launcher.Launcher.launch(Launcher.java:225)
at org.codehaus.plexus.classworlds.launcher.Launcher.mainWithExitCode(Launcher.java:406)
at org.codehaus.plexus.classworlds.launcher.Launcher.main(Launcher.java:347)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRegister -->
        <test-method status="FAIL" signature="testRegister(com.lemon.until.ExcelData)[pri:0, instance:com.lemon.testcase.LemonRegister@5d6b5d3d]" name="testRegister" duration-ms="170" started-at="2021-09-19T16:07:32Z" data-provider="getData" finished-at="2021-09-19T16:07:32Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[ExcelData{case_id=4, module='register', title='重复注册多次', method='post', address='/member/register', headers='{"Content-Type":"application/json;Charset=utf-8","X-Lemonban-Media-Type":"lemonban.v2"}', data='{
 "mobile_phone":"13700000003",
 "pwd":"1234567890123456"
}', expect='{ 
"code": 2,
 "msg": "账号已存在"
}', sqlCheck='null'}]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.NullPointerException">
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException
at io.qameta.allure.Allure.addAttachment(Allure.java:392)
at com.lemon.testcase.LemonRegister.testRegister(LemonRegister.java:114)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:497)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:497)
at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray2(ReflectionUtils.java:206)
at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:161)
at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:84)
at org.apache.maven.plugin.surefire.InPluginVMSurefireStarter.runSuitesInProcess(InPluginVMSurefireStarter.java:87)
at org.apache.maven.plugin.surefire.AbstractSurefireMojo.executeProvider(AbstractSurefireMojo.java:1166)
at org.apache.maven.plugin.surefire.AbstractSurefireMojo.executeAfterPreconditionsChecked(AbstractSurefireMojo.java:1011)
at org.apache.maven.plugin.surefire.AbstractSurefireMojo.execute(AbstractSurefireMojo.java:857)
at org.apache.maven.plugin.DefaultBuildPluginManager.executeMojo(DefaultBuildPluginManager.java:137)
at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:210)
at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:156)
at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:148)
at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:117)
at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:81)
at org.apache.maven.lifecycle.internal.builder.singlethreaded.SingleThreadedBuilder.build(SingleThreadedBuilder.java:56)
at org.apache.maven.lifecycle.internal.LifecycleStarter.execute(LifecycleStarter.java:128)
at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:305)
at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:192)
at org.apache.maven.DefaultMaven.execute(DefaultMaven.java:105)
at org.apache.maven.cli.MavenCli.execute(MavenCli.java:957)
at org.apache.maven.cli.MavenCli.doMain(MavenCli.java:289)
at org.apache.maven.cli.MavenCli.main(MavenCli.java:193)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:497)
at org.codehaus.plexus.classworlds.launcher.Launcher.launchEnhanced(Launcher.java:282)
at org.codehaus.plexus.classworlds.launcher.Launcher.launch(Launcher.java:225)
at org.codehaus.plexus.classworlds.launcher.Launcher.mainWithExitCode(Launcher.java:406)
at org.codehaus.plexus.classworlds.launcher.Launcher.main(Launcher.java:347)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRegister -->
        <test-method status="FAIL" signature="testRegister(com.lemon.until.ExcelData)[pri:0, instance:com.lemon.testcase.LemonRegister@5d6b5d3d]" name="testRegister" duration-ms="62" started-at="2021-09-19T16:07:32Z" data-provider="getData" finished-at="2021-09-19T16:07:32Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[ExcelData{case_id=5, module='register', title='10位手机号注册', method='post', address='/member/register', headers='{"Content-Type":"application/json;Charset=utf-8","X-Lemonban-Media-Type":"lemonban.v2"}', data='{
 "mobile_phone":"1371234123",
 "pwd":"12345680"
}', expect='{ 
"code": 2,
 "msg": "无效的手机格式"
}', sqlCheck='null'}]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.NullPointerException">
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException
at io.qameta.allure.Allure.addAttachment(Allure.java:392)
at com.lemon.testcase.LemonRegister.testRegister(LemonRegister.java:114)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:497)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:497)
at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray2(ReflectionUtils.java:206)
at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:161)
at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:84)
at org.apache.maven.plugin.surefire.InPluginVMSurefireStarter.runSuitesInProcess(InPluginVMSurefireStarter.java:87)
at org.apache.maven.plugin.surefire.AbstractSurefireMojo.executeProvider(AbstractSurefireMojo.java:1166)
at org.apache.maven.plugin.surefire.AbstractSurefireMojo.executeAfterPreconditionsChecked(AbstractSurefireMojo.java:1011)
at org.apache.maven.plugin.surefire.AbstractSurefireMojo.execute(AbstractSurefireMojo.java:857)
at org.apache.maven.plugin.DefaultBuildPluginManager.executeMojo(DefaultBuildPluginManager.java:137)
at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:210)
at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:156)
at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:148)
at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:117)
at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:81)
at org.apache.maven.lifecycle.internal.builder.singlethreaded.SingleThreadedBuilder.build(SingleThreadedBuilder.java:56)
at org.apache.maven.lifecycle.internal.LifecycleStarter.execute(LifecycleStarter.java:128)
at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:305)
at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:192)
at org.apache.maven.DefaultMaven.execute(DefaultMaven.java:105)
at org.apache.maven.cli.MavenCli.execute(MavenCli.java:957)
at org.apache.maven.cli.MavenCli.doMain(MavenCli.java:289)
at org.apache.maven.cli.MavenCli.main(MavenCli.java:193)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:497)
at org.codehaus.plexus.classworlds.launcher.Launcher.launchEnhanced(Launcher.java:282)
at org.codehaus.plexus.classworlds.launcher.Launcher.launch(Launcher.java:225)
at org.codehaus.plexus.classworlds.launcher.Launcher.mainWithExitCode(Launcher.java:406)
at org.codehaus.plexus.classworlds.launcher.Launcher.main(Launcher.java:347)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRegister -->
        <test-method status="FAIL" signature="testRegister(com.lemon.until.ExcelData)[pri:0, instance:com.lemon.testcase.LemonRegister@5d6b5d3d]" name="testRegister" duration-ms="87" started-at="2021-09-19T16:07:32Z" data-provider="getData" finished-at="2021-09-19T16:07:32Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[ExcelData{case_id=6, module='register', title='12位手机号注册', method='post', address='/member/register', headers='{"Content-Type":"application/json;Charset=utf-8","X-Lemonban-Media-Type":"lemonban.v2"}', data='{
 "mobile_phone":"137123412345",
 "pwd":"12345681"
}', expect='{ 
"code": 2,
 "msg": "无效的手机格式"
}', sqlCheck='null'}]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.NullPointerException">
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException
at io.qameta.allure.Allure.addAttachment(Allure.java:392)
at com.lemon.testcase.LemonRegister.testRegister(LemonRegister.java:114)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:497)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:497)
at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray2(ReflectionUtils.java:206)
at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:161)
at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:84)
at org.apache.maven.plugin.surefire.InPluginVMSurefireStarter.runSuitesInProcess(InPluginVMSurefireStarter.java:87)
at org.apache.maven.plugin.surefire.AbstractSurefireMojo.executeProvider(AbstractSurefireMojo.java:1166)
at org.apache.maven.plugin.surefire.AbstractSurefireMojo.executeAfterPreconditionsChecked(AbstractSurefireMojo.java:1011)
at org.apache.maven.plugin.surefire.AbstractSurefireMojo.execute(AbstractSurefireMojo.java:857)
at org.apache.maven.plugin.DefaultBuildPluginManager.executeMojo(DefaultBuildPluginManager.java:137)
at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:210)
at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:156)
at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:148)
at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:117)
at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:81)
at org.apache.maven.lifecycle.internal.builder.singlethreaded.SingleThreadedBuilder.build(SingleThreadedBuilder.java:56)
at org.apache.maven.lifecycle.internal.LifecycleStarter.execute(LifecycleStarter.java:128)
at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:305)
at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:192)
at org.apache.maven.DefaultMaven.execute(DefaultMaven.java:105)
at org.apache.maven.cli.MavenCli.execute(MavenCli.java:957)
at org.apache.maven.cli.MavenCli.doMain(MavenCli.java:289)
at org.apache.maven.cli.MavenCli.main(MavenCli.java:193)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:497)
at org.codehaus.plexus.classworlds.launcher.Launcher.launchEnhanced(Launcher.java:282)
at org.codehaus.plexus.classworlds.launcher.Launcher.launch(Launcher.java:225)
at org.codehaus.plexus.classworlds.launcher.Launcher.mainWithExitCode(Launcher.java:406)
at org.codehaus.plexus.classworlds.launcher.Launcher.main(Launcher.java:347)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRegister -->
        <test-method status="FAIL" signature="testRegister(com.lemon.until.ExcelData)[pri:0, instance:com.lemon.testcase.LemonRegister@5d6b5d3d]" name="testRegister" duration-ms="160" started-at="2021-09-19T16:07:32Z" data-provider="getData" finished-at="2021-09-19T16:07:32Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[ExcelData{case_id=7, module='register', title='已注册手机号注册', method='post', address='/member/register', headers='{"Content-Type":"application/json;Charset=utf-8","X-Lemonban-Media-Type":"lemonban.v2"}', data='{
 "mobile_phone":"13712341234",
 "pwd":"12345682"
}', expect='{ 
"code": 2,
 "msg": "账号已存在"
}', sqlCheck='null'}]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.NullPointerException">
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException
at io.qameta.allure.Allure.addAttachment(Allure.java:392)
at com.lemon.testcase.LemonRegister.testRegister(LemonRegister.java:114)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:497)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:497)
at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray2(ReflectionUtils.java:206)
at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:161)
at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:84)
at org.apache.maven.plugin.surefire.InPluginVMSurefireStarter.runSuitesInProcess(InPluginVMSurefireStarter.java:87)
at org.apache.maven.plugin.surefire.AbstractSurefireMojo.executeProvider(AbstractSurefireMojo.java:1166)
at org.apache.maven.plugin.surefire.AbstractSurefireMojo.executeAfterPreconditionsChecked(AbstractSurefireMojo.java:1011)
at org.apache.maven.plugin.surefire.AbstractSurefireMojo.execute(AbstractSurefireMojo.java:857)
at org.apache.maven.plugin.DefaultBuildPluginManager.executeMojo(DefaultBuildPluginManager.java:137)
at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:210)
at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:156)
at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:148)
at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:117)
at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:81)
at org.apache.maven.lifecycle.internal.builder.singlethreaded.SingleThreadedBuilder.build(SingleThreadedBuilder.java:56)
at org.apache.maven.lifecycle.internal.LifecycleStarter.execute(LifecycleStarter.java:128)
at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:305)
at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:192)
at org.apache.maven.DefaultMaven.execute(DefaultMaven.java:105)
at org.apache.maven.cli.MavenCli.execute(MavenCli.java:957)
at org.apache.maven.cli.MavenCli.doMain(MavenCli.java:289)
at org.apache.maven.cli.MavenCli.main(MavenCli.java:193)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:497)
at org.codehaus.plexus.classworlds.launcher.Launcher.launchEnhanced(Launcher.java:282)
at org.codehaus.plexus.classworlds.launcher.Launcher.launch(Launcher.java:225)
at org.codehaus.plexus.classworlds.launcher.Launcher.mainWithExitCode(Launcher.java:406)
at org.codehaus.plexus.classworlds.launcher.Launcher.main(Launcher.java:347)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRegister -->
        <test-method status="FAIL" signature="testRegister(com.lemon.until.ExcelData)[pri:0, instance:com.lemon.testcase.LemonRegister@5d6b5d3d]" name="testRegister" duration-ms="65" started-at="2021-09-19T16:07:32Z" data-provider="getData" finished-at="2021-09-19T16:07:32Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[ExcelData{case_id=8, module='register', title='非数字格式手机号注册', method='post', address='/member/register', headers='{"Content-Type":"application/json;Charset=utf-8","X-Lemonban-Media-Type":"lemonban.v2"}', data='{
 "mobile_phone":"13712s34123",
 "pwd":"12345683"
}', expect='{ 
"code": 2,
 "msg": "无效的手机格式"
}', sqlCheck='null'}]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.NullPointerException">
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException
at io.qameta.allure.Allure.addAttachment(Allure.java:392)
at com.lemon.testcase.LemonRegister.testRegister(LemonRegister.java:114)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:497)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:497)
at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray2(ReflectionUtils.java:206)
at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:161)
at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:84)
at org.apache.maven.plugin.surefire.InPluginVMSurefireStarter.runSuitesInProcess(InPluginVMSurefireStarter.java:87)
at org.apache.maven.plugin.surefire.AbstractSurefireMojo.executeProvider(AbstractSurefireMojo.java:1166)
at org.apache.maven.plugin.surefire.AbstractSurefireMojo.executeAfterPreconditionsChecked(AbstractSurefireMojo.java:1011)
at org.apache.maven.plugin.surefire.AbstractSurefireMojo.execute(AbstractSurefireMojo.java:857)
at org.apache.maven.plugin.DefaultBuildPluginManager.executeMojo(DefaultBuildPluginManager.java:137)
at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:210)
at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:156)
at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:148)
at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:117)
at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:81)
at org.apache.maven.lifecycle.internal.builder.singlethreaded.SingleThreadedBuilder.build(SingleThreadedBuilder.java:56)
at org.apache.maven.lifecycle.internal.LifecycleStarter.execute(LifecycleStarter.java:128)
at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:305)
at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:192)
at org.apache.maven.DefaultMaven.execute(DefaultMaven.java:105)
at org.apache.maven.cli.MavenCli.execute(MavenCli.java:957)
at org.apache.maven.cli.MavenCli.doMain(MavenCli.java:289)
at org.apache.maven.cli.MavenCli.main(MavenCli.java:193)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:497)
at org.codehaus.plexus.classworlds.launcher.Launcher.launchEnhanced(Launcher.java:282)
at org.codehaus.plexus.classworlds.launcher.Launcher.launch(Launcher.java:225)
at org.codehaus.plexus.classworlds.launcher.Launcher.mainWithExitCode(Launcher.java:406)
at org.codehaus.plexus.classworlds.launcher.Launcher.main(Launcher.java:347)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRegister -->
        <test-method status="FAIL" signature="testRegister(com.lemon.until.ExcelData)[pri:0, instance:com.lemon.testcase.LemonRegister@5d6b5d3d]" name="testRegister" duration-ms="59" started-at="2021-09-19T16:07:32Z" data-provider="getData" finished-at="2021-09-19T16:07:32Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[ExcelData{case_id=9, module='register', title='注册手机号含有空格', method='post', address='/member/register', headers='{"Content-Type":"application/json;Charset=utf-8","X-Lemonban-Media-Type":"lemonban.v2"}', data='{
 "mobile_phone":"137123 4124",
 "pwd":"12345684"
}', expect='{ 
"code": 2,
 "msg": "无效的手机格式"
}', sqlCheck='null'}]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.NullPointerException">
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException
at io.qameta.allure.Allure.addAttachment(Allure.java:392)
at com.lemon.testcase.LemonRegister.testRegister(LemonRegister.java:114)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:497)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:497)
at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray2(ReflectionUtils.java:206)
at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:161)
at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:84)
at org.apache.maven.plugin.surefire.InPluginVMSurefireStarter.runSuitesInProcess(InPluginVMSurefireStarter.java:87)
at org.apache.maven.plugin.surefire.AbstractSurefireMojo.executeProvider(AbstractSurefireMojo.java:1166)
at org.apache.maven.plugin.surefire.AbstractSurefireMojo.executeAfterPreconditionsChecked(AbstractSurefireMojo.java:1011)
at org.apache.maven.plugin.surefire.AbstractSurefireMojo.execute(AbstractSurefireMojo.java:857)
at org.apache.maven.plugin.DefaultBuildPluginManager.executeMojo(DefaultBuildPluginManager.java:137)
at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:210)
at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:156)
at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:148)
at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:117)
at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:81)
at org.apache.maven.lifecycle.internal.builder.singlethreaded.SingleThreadedBuilder.build(SingleThreadedBuilder.java:56)
at org.apache.maven.lifecycle.internal.LifecycleStarter.execute(LifecycleStarter.java:128)
at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:305)
at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:192)
at org.apache.maven.DefaultMaven.execute(DefaultMaven.java:105)
at org.apache.maven.cli.MavenCli.execute(MavenCli.java:957)
at org.apache.maven.cli.MavenCli.doMain(MavenCli.java:289)
at org.apache.maven.cli.MavenCli.main(MavenCli.java:193)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:497)
at org.codehaus.plexus.classworlds.launcher.Launcher.launchEnhanced(Launcher.java:282)
at org.codehaus.plexus.classworlds.launcher.Launcher.launch(Launcher.java:225)
at org.codehaus.plexus.classworlds.launcher.Launcher.mainWithExitCode(Launcher.java:406)
at org.codehaus.plexus.classworlds.launcher.Launcher.main(Launcher.java:347)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRegister -->
        <test-method status="FAIL" signature="testRegister(com.lemon.until.ExcelData)[pri:0, instance:com.lemon.testcase.LemonRegister@5d6b5d3d]" name="testRegister" duration-ms="55" started-at="2021-09-19T16:07:32Z" data-provider="getData" finished-at="2021-09-19T16:07:32Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[ExcelData{case_id=10, module='register', title='注册手机号为空', method='post', address='/member/register', headers='{"Content-Type":"application/json;Charset=utf-8","X-Lemonban-Media-Type":"lemonban.v2"}', data='{
 "mobile_phone":"",
 "pwd":"12345685"
}', expect='{ 
"code": 1,
 "msg": "手机号为空"
}', sqlCheck='null'}]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.NullPointerException">
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException
at io.qameta.allure.Allure.addAttachment(Allure.java:392)
at com.lemon.testcase.LemonRegister.testRegister(LemonRegister.java:114)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:497)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:497)
at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray2(ReflectionUtils.java:206)
at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:161)
at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:84)
at org.apache.maven.plugin.surefire.InPluginVMSurefireStarter.runSuitesInProcess(InPluginVMSurefireStarter.java:87)
at org.apache.maven.plugin.surefire.AbstractSurefireMojo.executeProvider(AbstractSurefireMojo.java:1166)
at org.apache.maven.plugin.surefire.AbstractSurefireMojo.executeAfterPreconditionsChecked(AbstractSurefireMojo.java:1011)
at org.apache.maven.plugin.surefire.AbstractSurefireMojo.execute(AbstractSurefireMojo.java:857)
at org.apache.maven.plugin.DefaultBuildPluginManager.executeMojo(DefaultBuildPluginManager.java:137)
at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:210)
at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:156)
at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:148)
at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:117)
at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:81)
at org.apache.maven.lifecycle.internal.builder.singlethreaded.SingleThreadedBuilder.build(SingleThreadedBuilder.java:56)
at org.apache.maven.lifecycle.internal.LifecycleStarter.execute(LifecycleStarter.java:128)
at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:305)
at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:192)
at org.apache.maven.DefaultMaven.execute(DefaultMaven.java:105)
at org.apache.maven.cli.MavenCli.execute(MavenCli.java:957)
at org.apache.maven.cli.MavenCli.doMain(MavenCli.java:289)
at org.apache.maven.cli.MavenCli.main(MavenCli.java:193)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:497)
at org.codehaus.plexus.classworlds.launcher.Launcher.launchEnhanced(Launcher.java:282)
at org.codehaus.plexus.classworlds.launcher.Launcher.launch(Launcher.java:225)
at org.codehaus.plexus.classworlds.launcher.Launcher.mainWithExitCode(Launcher.java:406)
at org.codehaus.plexus.classworlds.launcher.Launcher.main(Launcher.java:347)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRegister -->
        <test-method status="FAIL" signature="testRegister(com.lemon.until.ExcelData)[pri:0, instance:com.lemon.testcase.LemonRegister@5d6b5d3d]" name="testRegister" duration-ms="52" started-at="2021-09-19T16:07:32Z" data-provider="getData" finished-at="2021-09-19T16:07:32Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[ExcelData{case_id=11, module='register', title='密码7位', method='post', address='/member/register', headers='{"Content-Type":"application/json;Charset=utf-8","X-Lemonban-Media-Type":"lemonban.v2"}', data='{
 "mobile_phone":"13712341234",
 "pwd":"1234568"
}', expect='{ 
"code": 2,
 "msg": "密码格式为8到16位"
}', sqlCheck='null'}]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.NullPointerException">
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException
at io.qameta.allure.Allure.addAttachment(Allure.java:392)
at com.lemon.testcase.LemonRegister.testRegister(LemonRegister.java:114)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:497)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:497)
at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray2(ReflectionUtils.java:206)
at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:161)
at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:84)
at org.apache.maven.plugin.surefire.InPluginVMSurefireStarter.runSuitesInProcess(InPluginVMSurefireStarter.java:87)
at org.apache.maven.plugin.surefire.AbstractSurefireMojo.executeProvider(AbstractSurefireMojo.java:1166)
at org.apache.maven.plugin.surefire.AbstractSurefireMojo.executeAfterPreconditionsChecked(AbstractSurefireMojo.java:1011)
at org.apache.maven.plugin.surefire.AbstractSurefireMojo.execute(AbstractSurefireMojo.java:857)
at org.apache.maven.plugin.DefaultBuildPluginManager.executeMojo(DefaultBuildPluginManager.java:137)
at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:210)
at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:156)
at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:148)
at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:117)
at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:81)
at org.apache.maven.lifecycle.internal.builder.singlethreaded.SingleThreadedBuilder.build(SingleThreadedBuilder.java:56)
at org.apache.maven.lifecycle.internal.LifecycleStarter.execute(LifecycleStarter.java:128)
at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:305)
at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:192)
at org.apache.maven.DefaultMaven.execute(DefaultMaven.java:105)
at org.apache.maven.cli.MavenCli.execute(MavenCli.java:957)
at org.apache.maven.cli.MavenCli.doMain(MavenCli.java:289)
at org.apache.maven.cli.MavenCli.main(MavenCli.java:193)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:497)
at org.codehaus.plexus.classworlds.launcher.Launcher.launchEnhanced(Launcher.java:282)
at org.codehaus.plexus.classworlds.launcher.Launcher.launch(Launcher.java:225)
at org.codehaus.plexus.classworlds.launcher.Launcher.mainWithExitCode(Launcher.java:406)
at org.codehaus.plexus.classworlds.launcher.Launcher.main(Launcher.java:347)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRegister -->
        <test-method status="FAIL" signature="testRegister(com.lemon.until.ExcelData)[pri:0, instance:com.lemon.testcase.LemonRegister@5d6b5d3d]" name="testRegister" duration-ms="61" started-at="2021-09-19T16:07:32Z" data-provider="getData" finished-at="2021-09-19T16:07:33Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[ExcelData{case_id=12, module='register', title='密码17位', method='post', address='/member/register', headers='{"Content-Type":"application/json;Charset=utf-8","X-Lemonban-Media-Type":"lemonban.v2"}', data='{
 "mobile_phone":"13712341234",
 "pwd":"12345687123654789"
}', expect='{ 
"code": 2,
 "msg": "密码格式为8到16位"
}', sqlCheck='null'}]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.NullPointerException">
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException
at io.qameta.allure.Allure.addAttachment(Allure.java:392)
at com.lemon.testcase.LemonRegister.testRegister(LemonRegister.java:114)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:497)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:497)
at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray2(ReflectionUtils.java:206)
at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:161)
at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:84)
at org.apache.maven.plugin.surefire.InPluginVMSurefireStarter.runSuitesInProcess(InPluginVMSurefireStarter.java:87)
at org.apache.maven.plugin.surefire.AbstractSurefireMojo.executeProvider(AbstractSurefireMojo.java:1166)
at org.apache.maven.plugin.surefire.AbstractSurefireMojo.executeAfterPreconditionsChecked(AbstractSurefireMojo.java:1011)
at org.apache.maven.plugin.surefire.AbstractSurefireMojo.execute(AbstractSurefireMojo.java:857)
at org.apache.maven.plugin.DefaultBuildPluginManager.executeMojo(DefaultBuildPluginManager.java:137)
at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:210)
at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:156)
at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:148)
at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:117)
at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:81)
at org.apache.maven.lifecycle.internal.builder.singlethreaded.SingleThreadedBuilder.build(SingleThreadedBuilder.java:56)
at org.apache.maven.lifecycle.internal.LifecycleStarter.execute(LifecycleStarter.java:128)
at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:305)
at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:192)
at org.apache.maven.DefaultMaven.execute(DefaultMaven.java:105)
at org.apache.maven.cli.MavenCli.execute(MavenCli.java:957)
at org.apache.maven.cli.MavenCli.doMain(MavenCli.java:289)
at org.apache.maven.cli.MavenCli.main(MavenCli.java:193)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:497)
at org.codehaus.plexus.classworlds.launcher.Launcher.launchEnhanced(Launcher.java:282)
at org.codehaus.plexus.classworlds.launcher.Launcher.launch(Launcher.java:225)
at org.codehaus.plexus.classworlds.launcher.Launcher.mainWithExitCode(Launcher.java:406)
at org.codehaus.plexus.classworlds.launcher.Launcher.main(Launcher.java:347)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRegister -->
        <test-method status="FAIL" signature="testRegister(com.lemon.until.ExcelData)[pri:0, instance:com.lemon.testcase.LemonRegister@5d6b5d3d]" name="testRegister" duration-ms="57" started-at="2021-09-19T16:07:33Z" data-provider="getData" finished-at="2021-09-19T16:07:33Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[ExcelData{case_id=13, module='register', title='密码为空', method='post', address='/member/register', headers='{"Content-Type":"application/json;Charset=utf-8","X-Lemonban-Media-Type":"lemonban.v2"}', data='{
 "mobile_phone":"13712341234",
 "pwd":""
}', expect='{ 
"code": 1,
 "msg": "密码为空"
}', sqlCheck='null'}]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.NullPointerException">
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException
at io.qameta.allure.Allure.addAttachment(Allure.java:392)
at com.lemon.testcase.LemonRegister.testRegister(LemonRegister.java:114)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:497)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:497)
at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray2(ReflectionUtils.java:206)
at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:161)
at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:84)
at org.apache.maven.plugin.surefire.InPluginVMSurefireStarter.runSuitesInProcess(InPluginVMSurefireStarter.java:87)
at org.apache.maven.plugin.surefire.AbstractSurefireMojo.executeProvider(AbstractSurefireMojo.java:1166)
at org.apache.maven.plugin.surefire.AbstractSurefireMojo.executeAfterPreconditionsChecked(AbstractSurefireMojo.java:1011)
at org.apache.maven.plugin.surefire.AbstractSurefireMojo.execute(AbstractSurefireMojo.java:857)
at org.apache.maven.plugin.DefaultBuildPluginManager.executeMojo(DefaultBuildPluginManager.java:137)
at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:210)
at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:156)
at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:148)
at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:117)
at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:81)
at org.apache.maven.lifecycle.internal.builder.singlethreaded.SingleThreadedBuilder.build(SingleThreadedBuilder.java:56)
at org.apache.maven.lifecycle.internal.LifecycleStarter.execute(LifecycleStarter.java:128)
at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:305)
at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:192)
at org.apache.maven.DefaultMaven.execute(DefaultMaven.java:105)
at org.apache.maven.cli.MavenCli.execute(MavenCli.java:957)
at org.apache.maven.cli.MavenCli.doMain(MavenCli.java:289)
at org.apache.maven.cli.MavenCli.main(MavenCli.java:193)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:497)
at org.codehaus.plexus.classworlds.launcher.Launcher.launchEnhanced(Launcher.java:282)
at org.codehaus.plexus.classworlds.launcher.Launcher.launch(Launcher.java:225)
at org.codehaus.plexus.classworlds.launcher.Launcher.mainWithExitCode(Launcher.java:406)
at org.codehaus.plexus.classworlds.launcher.Launcher.main(Launcher.java:347)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRegister -->
      </class> <!-- com.lemon.testcase.LemonRegister -->
      <class name="com.lemon.testcase.LemonLogin">
        <test-method status="PASS" signature="setup()[pri:0, instance:com.lemon.testcase.LemonLogin@464d5365]" name="setup" is-config="true" duration-ms="59" started-at="2021-09-19T16:07:33Z" finished-at="2021-09-19T16:07:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="testLogin(com.lemon.until.ExcelData)[pri:0, instance:com.lemon.testcase.LemonLogin@464d5365]" name="testLogin" duration-ms="206" started-at="2021-09-19T16:07:33Z" data-provider="getData" finished-at="2021-09-19T16:07:33Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[ExcelData{case_id=1, module='login', title='11位手机号，8位密码登录', method='post', address='/member/login', headers='{"Content-Type":"application/json;Charset=utf-8","X-Lemonban-Media-Type":"lemonban.v2"}', data='{
 "mobile_phone":"13123302546",
 "pwd":"12345678"
}', expect='{ 
"code": 0,
 "msg": "OK"
}', sqlCheck='null'}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLogin -->
        <test-method status="PASS" signature="testLogin(com.lemon.until.ExcelData)[pri:0, instance:com.lemon.testcase.LemonLogin@464d5365]" name="testLogin" duration-ms="182" started-at="2021-09-19T16:07:33Z" data-provider="getData" finished-at="2021-09-19T16:07:33Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[ExcelData{case_id=2, module='login', title='11位手机号，16位密码', method='post', address='/member/login', headers='{"Content-Type":"application/json;Charset=utf-8","X-Lemonban-Media-Type":"lemonban.v2"}', data='{
 "mobile_phone":"13135263576",
 "pwd":"1234567812345678"
}', expect='{ 
"code": 0,
 "msg": "OK"
}', sqlCheck='null'}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLogin -->
        <test-method status="PASS" signature="testLogin(com.lemon.until.ExcelData)[pri:0, instance:com.lemon.testcase.LemonLogin@464d5365]" name="testLogin" duration-ms="201" started-at="2021-09-19T16:07:33Z" data-provider="getData" finished-at="2021-09-19T16:07:33Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[ExcelData{case_id=3, module='login', title='管理员登录', method='post', address='/member/login', headers='{"Content-Type":"application/json;Charset=utf-8","X-Lemonban-Media-Type":"lemonban.v2"}', data='{
 "mobile_phone":"13113643266",
 "pwd":"12345678"
}', expect='{ 
"code": 0,
 "msg": "OK"
}', sqlCheck='null'}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLogin -->
        <test-method status="PASS" signature="testLogin(com.lemon.until.ExcelData)[pri:0, instance:com.lemon.testcase.LemonLogin@464d5365]" name="testLogin" duration-ms="74" started-at="2021-09-19T16:07:33Z" data-provider="getData" finished-at="2021-09-19T16:07:33Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[ExcelData{case_id=4, module='login', title='10位手机号登录', method='post', address='/member/login', headers='{"Content-Type":"application/json;Charset=utf-8","X-Lemonban-Media-Type":"lemonban.v2"}', data='{
 "mobile_phone":"1371234123",
 "pwd":"12345680"
}', expect='{ 
"code": 2,
 "msg": "无效的手机格式"
}', sqlCheck='null'}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLogin -->
        <test-method status="PASS" signature="testLogin(com.lemon.until.ExcelData)[pri:0, instance:com.lemon.testcase.LemonLogin@464d5365]" name="testLogin" duration-ms="58" started-at="2021-09-19T16:07:33Z" data-provider="getData" finished-at="2021-09-19T16:07:33Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[ExcelData{case_id=5, module='login', title='12位手机号登录', method='post', address='/member/login', headers='{"Content-Type":"application/json;Charset=utf-8","X-Lemonban-Media-Type":"lemonban.v2"}', data='{
 "mobile_phone":"137123412345",
 "pwd":"12345681"
}', expect='{ 
"code": 2,
 "msg": "无效的手机格式"
}', sqlCheck='null'}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLogin -->
        <test-method status="PASS" signature="testLogin(com.lemon.until.ExcelData)[pri:0, instance:com.lemon.testcase.LemonLogin@464d5365]" name="testLogin" duration-ms="153" started-at="2021-09-19T16:07:33Z" data-provider="getData" finished-at="2021-09-19T16:07:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[ExcelData{case_id=6, module='login', title='错误密码登录', method='post', address='/member/login', headers='{"Content-Type":"application/json;Charset=utf-8","X-Lemonban-Media-Type":"lemonban.v2"}', data='{
 "mobile_phone":"13712341234",
 "pwd":"12345682"
}', expect='{ 
"code": 1001,
 "msg": "账号信息错误"
}', sqlCheck='null'}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLogin -->
        <test-method status="PASS" signature="testLogin(com.lemon.until.ExcelData)[pri:0, instance:com.lemon.testcase.LemonLogin@464d5365]" name="testLogin" duration-ms="59" started-at="2021-09-19T16:07:34Z" data-provider="getData" finished-at="2021-09-19T16:07:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[ExcelData{case_id=7, module='login', title='非数字格式手机号登录', method='post', address='/member/login', headers='{"Content-Type":"application/json;Charset=utf-8","X-Lemonban-Media-Type":"lemonban.v2"}', data='{
 "mobile_phone":"13712s34123",
 "pwd":"12345683"
}', expect='{ 
"code": 2,
 "msg": "无效的手机格式"
}', sqlCheck='null'}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLogin -->
        <test-method status="PASS" signature="testLogin(com.lemon.until.ExcelData)[pri:0, instance:com.lemon.testcase.LemonLogin@464d5365]" name="testLogin" duration-ms="61" started-at="2021-09-19T16:07:34Z" data-provider="getData" finished-at="2021-09-19T16:07:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[ExcelData{case_id=8, module='login', title='手机号含有空格', method='post', address='/member/login', headers='{"Content-Type":"application/json;Charset=utf-8","X-Lemonban-Media-Type":"lemonban.v2"}', data='{
 "mobile_phone":"137123 4124",
 "pwd":"12345684"
}', expect='{ 
"code": 2,
 "msg": "无效的手机格式"
}', sqlCheck='null'}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLogin -->
        <test-method status="PASS" signature="testLogin(com.lemon.until.ExcelData)[pri:0, instance:com.lemon.testcase.LemonLogin@464d5365]" name="testLogin" duration-ms="64" started-at="2021-09-19T16:07:34Z" data-provider="getData" finished-at="2021-09-19T16:07:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[ExcelData{case_id=9, module='login', title='手机号为空', method='post', address='/member/login', headers='{"Content-Type":"application/json;Charset=utf-8","X-Lemonban-Media-Type":"lemonban.v2"}', data='{
 "mobile_phone":" ",
 "pwd":"12345685"
}', expect='{ 
"code": 1,
 "msg": "手机号码为空"
}', sqlCheck='null'}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLogin -->
        <test-method status="PASS" signature="testLogin(com.lemon.until.ExcelData)[pri:0, instance:com.lemon.testcase.LemonLogin@464d5365]" name="testLogin" duration-ms="159" started-at="2021-09-19T16:07:34Z" data-provider="getData" finished-at="2021-09-19T16:07:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[ExcelData{case_id=10, module='login', title='密码7位', method='post', address='/member/login', headers='{"Content-Type":"application/json;Charset=utf-8","X-Lemonban-Media-Type":"lemonban.v2"}', data='{
 "mobile_phone":"13123302546",
 "pwd":"12345678910"
}', expect='{ 
"code": 1001,
 "msg": "账号信息错误"
}', sqlCheck='null'}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLogin -->
        <test-method status="PASS" signature="testLogin(com.lemon.until.ExcelData)[pri:0, instance:com.lemon.testcase.LemonLogin@464d5365]" name="testLogin" duration-ms="160" started-at="2021-09-19T16:07:34Z" data-provider="getData" finished-at="2021-09-19T16:07:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[ExcelData{case_id=11, module='login', title='密码17位', method='post', address='/member/login', headers='{"Content-Type":"application/json;Charset=utf-8","X-Lemonban-Media-Type":"lemonban.v2"}', data='{
 "mobile_phone":"13712341234",
 "pwd":"12345687654125789"
}', expect='{ 
"code": 1001,
 "msg": "账号信息错误"
}', sqlCheck='null'}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLogin -->
        <test-method status="PASS" signature="testLogin(com.lemon.until.ExcelData)[pri:0, instance:com.lemon.testcase.LemonLogin@464d5365]" name="testLogin" duration-ms="55" started-at="2021-09-19T16:07:34Z" data-provider="getData" finished-at="2021-09-19T16:07:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[ExcelData{case_id=12, module='login', title='密码为空', method='post', address='/member/login', headers='{"Content-Type":"application/json;Charset=utf-8","X-Lemonban-Media-Type":"lemonban.v2"}', data='{
 "mobile_phone":"13712341234",
 "pwd":""
}', expect='{ 
"code": 1,
 "msg": "密码为空"
}', sqlCheck='null'}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLogin -->
      </class> <!-- com.lemon.testcase.LemonLogin -->
      <class name="com.lemon.testcase.LemonAdd">
        <test-method status="PASS" signature="setup()[pri:0, instance:com.lemon.testcase.LemonAdd@7535f28]" name="setup" is-config="true" duration-ms="66" started-at="2021-09-19T16:07:37Z" finished-at="2021-09-19T16:07:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="testAdd(com.lemon.until.ExcelData)[pri:0, instance:com.lemon.testcase.LemonAdd@7535f28]" name="testAdd" duration-ms="275" started-at="2021-09-19T16:07:37Z" data-provider="getData" finished-at="2021-09-19T16:07:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[ExcelData{case_id=1, module='add', title='投资人新增借款项目', method='post', address='/loan/add', headers='{"Authorization":"Bearer eyJhbGciOiJIUzUxMiJ9.eyJtZW1iZXJfaWQiOjEyMzY5MTI5MTQsImV4cCI6MTYzMjA2Nzk1M30.TrbjNvfmvaLipQYjk8n4yEI2TLBQRoHhGF74-ZxVvzRDPs43bFT8DqEmVL9QoM-Ji0ftwYah-jrogLoDWkcbiQ","X-Lemonban-Media-Type":"lemonban.v2","Content-Type":"application/json;Charset=utf-8"}', data='{
    "member_id":1236912914,
    "title": "报名 Java 全栈自动化课程",
    "amount": 6300,
    "loan_rate": 12,
    "loan_term": 12,
    "loan_date_type": 1,
    "bidding_days": 5
}', expect='{
"code":0,
"msg":"OK",
"data.member_id":1236912914,
"data.title": "报名 Java 全栈自动化课程",
        "data.amount":6300.0,
        "data.loan_rate":12.0,
        "data.loan_term":12,
        "data.loan_date_type":1,
        "data.bidding_days":5,
        "data.status":1
}', sqlCheck='{"select count(*) from loan where member_id=1236912914":1
}'}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdd -->
        <test-method status="PASS" signature="testAdd(com.lemon.until.ExcelData)[pri:0, instance:com.lemon.testcase.LemonAdd@7535f28]" name="testAdd" duration-ms="181" started-at="2021-09-19T16:07:37Z" data-provider="getData" finished-at="2021-09-19T16:07:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[ExcelData{case_id=2, module='add', title='借款人新增借款项目', method='post', address='/loan/add', headers='{"Authorization":"Bearer eyJhbGciOiJIUzUxMiJ9.eyJtZW1iZXJfaWQiOjEyMzY5MTI5MTUsImV4cCI6MTYzMjA2Nzk1M30.XHXP5BTrQWzV9oi4MsYVVzPFuxBRhoaIhebeOr5gAZlKGs3WVsaWdrKkJbz0EyhLT57f8bJ8PCtZARVo0hbXhg","X-Lemonban-Media-Type":"lemonban.v2","Content-Type":"application/json;Charset=utf-8"}', data='{
    "member_id":1236912915,
    "title": "报名 Java 全栈自动化课程",
    "amount": 6300,
    "loan_rate": 12.0,
    "loan_term": 30,
    "loan_date_type": 2,
    "bidding_days": 10
}', expect='{
"code":0,
"msg":"OK",
"data.member_id":1236912915,
"data.title": "报名 Java 全栈自动化课程",
        "data.amount":6300.0,
        "data.loan_rate":12.0,
        "data.loan_term":30,
        "data.loan_date_type":2,
        "data.bidding_days":5,
        "data.status":1
}', sqlCheck='null'}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdd -->
        <test-method status="PASS" signature="testAdd(com.lemon.until.ExcelData)[pri:0, instance:com.lemon.testcase.LemonAdd@7535f28]" name="testAdd" duration-ms="55" started-at="2021-09-19T16:07:37Z" data-provider="getData" finished-at="2021-09-19T16:07:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[ExcelData{case_id=3, module='add', title='借款人新增借款项目，利率超过范围', method='post', address='/loan/add', headers='{"Authorization":"Bearer eyJhbGciOiJIUzUxMiJ9.eyJtZW1iZXJfaWQiOjEyMzY5MTI5MTUsImV4cCI6MTYzMjA2Nzk1M30.XHXP5BTrQWzV9oi4MsYVVzPFuxBRhoaIhebeOr5gAZlKGs3WVsaWdrKkJbz0EyhLT57f8bJ8PCtZARVo0hbXhg","X-Lemonban-Media-Type":"lemonban.v2","Content-Type":"application/json;Charset=utf-8"}', data='{
    "member_id":1236912915,
    "title": "报名 Java 全栈自动化课程",
    "amount": 6300,
    "loan_rate": 24.1,
    "loan_term": 30,
    "loan_date_type": 2,
    "bidding_days": 10
}', expect='{
    "code": 2,
    "msg": "借款利率范围错误"
}', sqlCheck='null'}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdd -->
        <test-method status="PASS" signature="testAdd(com.lemon.until.ExcelData)[pri:0, instance:com.lemon.testcase.LemonAdd@7535f28]" name="testAdd" duration-ms="60" started-at="2021-09-19T16:07:37Z" data-provider="getData" finished-at="2021-09-19T16:07:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[ExcelData{case_id=4, module='add', title='借款人新增借款项目，金额为负数', method='post', address='/loan/add', headers='{"Authorization":"Bearer eyJhbGciOiJIUzUxMiJ9.eyJtZW1iZXJfaWQiOjEyMzY5MTI5MTUsImV4cCI6MTYzMjA2Nzk1M30.XHXP5BTrQWzV9oi4MsYVVzPFuxBRhoaIhebeOr5gAZlKGs3WVsaWdrKkJbz0EyhLT57f8bJ8PCtZARVo0hbXhg","X-Lemonban-Media-Type":"lemonban.v2","Content-Type":"application/json;Charset=utf-8"}', data='{
    "member_id":1236912915,
    "title": "报名 Java 全栈自动化课程",
    "amount": -1,
    "loan_rate": 24,
    "loan_term": 30,
    "loan_date_type": 2,
    "bidding_days": 3
}', expect='{
    "code": 2,
    "msg": "借款金额范围错误"
}', sqlCheck='null'}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdd -->
        <test-method status="PASS" signature="testAdd(com.lemon.until.ExcelData)[pri:0, instance:com.lemon.testcase.LemonAdd@7535f28]" name="testAdd" duration-ms="69" started-at="2021-09-19T16:07:37Z" data-provider="getData" finished-at="2021-09-19T16:07:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[ExcelData{case_id=5, module='add', title='借款人新增借款项目，memberid不存在', method='post', address='/loan/add', headers='{"Authorization":"Bearer eyJhbGciOiJIUzUxMiJ9.eyJtZW1iZXJfaWQiOjEyMzY5MTI5MTUsImV4cCI6MTYzMjA2Nzk1M30.XHXP5BTrQWzV9oi4MsYVVzPFuxBRhoaIhebeOr5gAZlKGs3WVsaWdrKkJbz0EyhLT57f8bJ8PCtZARVo0hbXhg","X-Lemonban-Media-Type":"lemonban.v2","Content-Type":"application/json;Charset=utf-8"}', data='{
    "member_id":"",
    "title": "报名 Java 全栈自动化课程",
    "amount": -1,
    "loan_rate": 24,
    "loan_term": 30,
    "loan_date_type": 2,
    "bidding_days": 9
}', expect='{
    "code": 1,
    "msg": "用户id为空"
}', sqlCheck='null'}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdd -->
        <test-method status="PASS" signature="testAdd(com.lemon.until.ExcelData)[pri:0, instance:com.lemon.testcase.LemonAdd@7535f28]" name="testAdd" duration-ms="58" started-at="2021-09-19T16:07:37Z" data-provider="getData" finished-at="2021-09-19T16:07:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[ExcelData{case_id=6, module='add', title='借款人新增借款项目，title为空', method='post', address='/loan/add', headers='{"Authorization":"Bearer eyJhbGciOiJIUzUxMiJ9.eyJtZW1iZXJfaWQiOjEyMzY5MTI5MTUsImV4cCI6MTYzMjA2Nzk1M30.XHXP5BTrQWzV9oi4MsYVVzPFuxBRhoaIhebeOr5gAZlKGs3WVsaWdrKkJbz0EyhLT57f8bJ8PCtZARVo0hbXhg","X-Lemonban-Media-Type":"lemonban.v2","Content-Type":"application/json;Charset=utf-8"}', data='{
    "member_id":1236912915,
    "title": "",
    "amount": 100,
    "loan_rate": 24,
    "loan_term": 30,
    "loan_date_type": 2,
    "bidding_days": 8
}', expect='{
    "code": 1,
    "msg": "标题为空"
}', sqlCheck='null'}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdd -->
        <test-method status="PASS" signature="testAdd(com.lemon.until.ExcelData)[pri:0, instance:com.lemon.testcase.LemonAdd@7535f28]" name="testAdd" duration-ms="59" started-at="2021-09-19T16:07:37Z" data-provider="getData" finished-at="2021-09-19T16:07:38Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[ExcelData{case_id=7, module='add', title='借款人新增借款项目，金额为空', method='post', address='/loan/add', headers='{"Authorization":"Bearer eyJhbGciOiJIUzUxMiJ9.eyJtZW1iZXJfaWQiOjEyMzY5MTI5MTUsImV4cCI6MTYzMjA2Nzk1M30.XHXP5BTrQWzV9oi4MsYVVzPFuxBRhoaIhebeOr5gAZlKGs3WVsaWdrKkJbz0EyhLT57f8bJ8PCtZARVo0hbXhg","X-Lemonban-Media-Type":"lemonban.v2","Content-Type":"application/json;Charset=utf-8"}', data='{
    "member_id":1236912915,
    "title": "报名 Java 全栈自动化课程",
    "amount": "",
    "loan_rate": 24,
    "loan_term": 30,
    "loan_date_type": 2,
    "bidding_days": 5
}', expect='{
    "code": 1,
    "msg": "借款金额为空"
}', sqlCheck='null'}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdd -->
        <test-method status="PASS" signature="testAdd(com.lemon.until.ExcelData)[pri:0, instance:com.lemon.testcase.LemonAdd@7535f28]" name="testAdd" duration-ms="53" started-at="2021-09-19T16:07:38Z" data-provider="getData" finished-at="2021-09-19T16:07:38Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[ExcelData{case_id=8, module='add', title='借款人新增借款项目，利率为空', method='post', address='/loan/add', headers='{"Authorization":"Bearer eyJhbGciOiJIUzUxMiJ9.eyJtZW1iZXJfaWQiOjEyMzY5MTI5MTUsImV4cCI6MTYzMjA2Nzk1M30.XHXP5BTrQWzV9oi4MsYVVzPFuxBRhoaIhebeOr5gAZlKGs3WVsaWdrKkJbz0EyhLT57f8bJ8PCtZARVo0hbXhg","X-Lemonban-Media-Type":"lemonban.v2","Content-Type":"application/json;Charset=utf-8"}', data='{
    "member_id":1236912915,
    "title": "报名 Java 全栈自动化课程",
    "amount": 0,
    "loan_rate": "",
    "loan_term": 30,
    "loan_date_type": 2,
    "bidding_days": 5
}', expect='{
    "code": 1,
    "msg": "利率为空"
}', sqlCheck='null'}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdd -->
        <test-method status="PASS" signature="testAdd(com.lemon.until.ExcelData)[pri:0, instance:com.lemon.testcase.LemonAdd@7535f28]" name="testAdd" duration-ms="49" started-at="2021-09-19T16:07:38Z" data-provider="getData" finished-at="2021-09-19T16:07:38Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[ExcelData{case_id=9, module='add', title='借款人新增借款项目，借款期限为空', method='post', address='/loan/add', headers='{"Authorization":"Bearer eyJhbGciOiJIUzUxMiJ9.eyJtZW1iZXJfaWQiOjEyMzY5MTI5MTUsImV4cCI6MTYzMjA2Nzk1M30.XHXP5BTrQWzV9oi4MsYVVzPFuxBRhoaIhebeOr5gAZlKGs3WVsaWdrKkJbz0EyhLT57f8bJ8PCtZARVo0hbXhg","X-Lemonban-Media-Type":"lemonban.v2","Content-Type":"application/json;Charset=utf-8"}', data='{
    "member_id":1236912915,
    "title": "报名 Java 全栈自动化课程",
    "amount": 100,
    "loan_rate": 24,
    "loan_term": "",
    "loan_date_type": 2,
    "bidding_days": 5
}', expect='{
    "code": 1,
    "msg": "借款期限为空"
}', sqlCheck='null'}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdd -->
        <test-method status="PASS" signature="testAdd(com.lemon.until.ExcelData)[pri:0, instance:com.lemon.testcase.LemonAdd@7535f28]" name="testAdd" duration-ms="51" started-at="2021-09-19T16:07:38Z" data-provider="getData" finished-at="2021-09-19T16:07:38Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[ExcelData{case_id=10, module='add', title='借款人新增借款项目，借款期限超过45天', method='post', address='/loan/add', headers='{"Authorization":"Bearer eyJhbGciOiJIUzUxMiJ9.eyJtZW1iZXJfaWQiOjEyMzY5MTI5MTUsImV4cCI6MTYzMjA2Nzk1M30.XHXP5BTrQWzV9oi4MsYVVzPFuxBRhoaIhebeOr5gAZlKGs3WVsaWdrKkJbz0EyhLT57f8bJ8PCtZARVo0hbXhg","X-Lemonban-Media-Type":"lemonban.v2","Content-Type":"application/json;Charset=utf-8"}', data='{
    "member_id":1236912915,
    "title": "报名 Java 全栈自动化课程",
    "amount": 6300,
    "loan_rate": 24,
    "loan_term": 46,
    "loan_date_type": 2,
    "bidding_days": 10
}', expect='{
    "code": 2,
    "msg": "借款期限单位为天的项目,期限范围为10到45天(包含10天和45天)"
}', sqlCheck='null'}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdd -->
        <test-method status="PASS" signature="testAdd(com.lemon.until.ExcelData)[pri:0, instance:com.lemon.testcase.LemonAdd@7535f28]" name="testAdd" duration-ms="64" started-at="2021-09-19T16:07:38Z" data-provider="getData" finished-at="2021-09-19T16:07:38Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[ExcelData{case_id=11, module='add', title='借款人新增借款项目，借款期限少于1一个月', method='post', address='/loan/add', headers='{"Authorization":"Bearer eyJhbGciOiJIUzUxMiJ9.eyJtZW1iZXJfaWQiOjEyMzY5MTI5MTUsImV4cCI6MTYzMjA2Nzk1M30.XHXP5BTrQWzV9oi4MsYVVzPFuxBRhoaIhebeOr5gAZlKGs3WVsaWdrKkJbz0EyhLT57f8bJ8PCtZARVo0hbXhg","X-Lemonban-Media-Type":"lemonban.v2","Content-Type":"application/json;Charset=utf-8"}', data='{
    "member_id":1236912915,
    "title": "报名 Java 全栈自动化课程",
    "amount": 100,
    "loan_rate": 24,
    "loan_term": 0.1,
    "loan_date_type": 1,
    "bidding_days": 10
}', expect='{
    "code": 2,
    "msg": "借款期限单位为月的项目,期限范围为1到36个月(包含1个月和36个月)"
}', sqlCheck='null'}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdd -->
        <test-method status="PASS" signature="testAdd(com.lemon.until.ExcelData)[pri:0, instance:com.lemon.testcase.LemonAdd@7535f28]" name="testAdd" duration-ms="52" started-at="2021-09-19T16:07:38Z" data-provider="getData" finished-at="2021-09-19T16:07:38Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[ExcelData{case_id=12, module='add', title='借款人新增借款项目，type为空', method='post', address='/loan/add', headers='{"Authorization":"Bearer eyJhbGciOiJIUzUxMiJ9.eyJtZW1iZXJfaWQiOjEyMzY5MTI5MTUsImV4cCI6MTYzMjA2Nzk1M30.XHXP5BTrQWzV9oi4MsYVVzPFuxBRhoaIhebeOr5gAZlKGs3WVsaWdrKkJbz0EyhLT57f8bJ8PCtZARVo0hbXhg","X-Lemonban-Media-Type":"lemonban.v2","Content-Type":"application/json;Charset=utf-8"}', data='{
    "member_id":1236912915,
    "title": "报名 Java 全栈自动化课程",
    "amount": 100,
    "loan_rate": 24,
    "loan_term": 30,
    "loan_date_type": "",
    "bidding_days": 1
}', expect='{
    "code": 1,
    "msg": "借款日期类型为空"
}', sqlCheck='null'}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdd -->
        <test-method status="PASS" signature="testAdd(com.lemon.until.ExcelData)[pri:0, instance:com.lemon.testcase.LemonAdd@7535f28]" name="testAdd" duration-ms="61" started-at="2021-09-19T16:07:38Z" data-provider="getData" finished-at="2021-09-19T16:07:38Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[ExcelData{case_id=13, module='add', title='借款人新增借款项目，type非1或2', method='post', address='/loan/add', headers='{"Authorization":"Bearer eyJhbGciOiJIUzUxMiJ9.eyJtZW1iZXJfaWQiOjEyMzY5MTI5MTUsImV4cCI6MTYzMjA2Nzk1M30.XHXP5BTrQWzV9oi4MsYVVzPFuxBRhoaIhebeOr5gAZlKGs3WVsaWdrKkJbz0EyhLT57f8bJ8PCtZARVo0hbXhg","X-Lemonban-Media-Type":"lemonban.v2","Content-Type":"application/json;Charset=utf-8"}', data='{
    "member_id":1236912915,
    "title": "报名 Java 全栈自动化课程",
    "amount": 100,
    "loan_rate": 24,
    "loan_term": 30,
    "loan_date_type": 3,
    "bidding_days": 1
}', expect='{
    "code": 2,
    "msg": "借款类型不存在"
}', sqlCheck='null'}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdd -->
        <test-method status="PASS" signature="testAdd(com.lemon.until.ExcelData)[pri:0, instance:com.lemon.testcase.LemonAdd@7535f28]" name="testAdd" duration-ms="49" started-at="2021-09-19T16:07:38Z" data-provider="getData" finished-at="2021-09-19T16:07:38Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[ExcelData{case_id=14, module='add', title='借款人新增借款项目，竞标天数大于10天', method='post', address='/loan/add', headers='{"Authorization":"Bearer eyJhbGciOiJIUzUxMiJ9.eyJtZW1iZXJfaWQiOjEyMzY5MTI5MTUsImV4cCI6MTYzMjA2Nzk1M30.XHXP5BTrQWzV9oi4MsYVVzPFuxBRhoaIhebeOr5gAZlKGs3WVsaWdrKkJbz0EyhLT57f8bJ8PCtZARVo0hbXhg","X-Lemonban-Media-Type":"lemonban.v2","Content-Type":"application/json;Charset=utf-8"}', data='{
    "member_id":1236912915,
    "title": "报名 Java 全栈自动化课程",
    "amount": 100,
    "loan_rate": 24,
    "loan_term": 30,
    "loan_date_type": 2,
    "bidding_days": 11
}', expect='{
    "code": 2,
    "msg": "竞标期限为1-10天"
}', sqlCheck='null'}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdd -->
        <test-method status="PASS" signature="testAdd(com.lemon.until.ExcelData)[pri:0, instance:com.lemon.testcase.LemonAdd@7535f28]" name="testAdd" duration-ms="46" started-at="2021-09-19T16:07:38Z" data-provider="getData" finished-at="2021-09-19T16:07:38Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[ExcelData{case_id=15, module='add', title='借款人新增借款项目，竞标天数为空', method='post', address='/loan/add', headers='{"Authorization":"Bearer eyJhbGciOiJIUzUxMiJ9.eyJtZW1iZXJfaWQiOjEyMzY5MTI5MTUsImV4cCI6MTYzMjA2Nzk1M30.XHXP5BTrQWzV9oi4MsYVVzPFuxBRhoaIhebeOr5gAZlKGs3WVsaWdrKkJbz0EyhLT57f8bJ8PCtZARVo0hbXhg","X-Lemonban-Media-Type":"lemonban.v2","Content-Type":"application/json;Charset=utf-8"}', data='{
    "member_id":1236912915,
    "title": "报名 Java 全栈自动化课程",
    "amount": 100,
    "loan_rate": 24,
    "loan_term": 30,
    "loan_date_type": 3,
    "bidding_days": ""
}', expect='{
    "code": 1,
    "msg": "竞标期限为空"
}', sqlCheck='null'}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdd -->
      </class> <!-- com.lemon.testcase.LemonAdd -->
      <class name="com.lemon.testcase.LemonWithdraw">
        <test-method status="PASS" signature="setup()[pri:0, instance:com.lemon.testcase.LemonWithdraw@2ba9f743]" name="setup" is-config="true" duration-ms="59" started-at="2021-09-19T16:07:36Z" finished-at="2021-09-19T16:07:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="testWithdraw(com.lemon.until.ExcelData)[pri:0, instance:com.lemon.testcase.LemonWithdraw@2ba9f743]" name="testWithdraw" duration-ms="294" started-at="2021-09-19T16:07:36Z" data-provider="getData" finished-at="2021-09-19T16:07:36Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[ExcelData{case_id=1, module='withdraw', title='提现0.01元', method='post', address='/member/withdraw', headers='{"Authorization":"Bearer eyJhbGciOiJIUzUxMiJ9.eyJtZW1iZXJfaWQiOjEyMzY5MTI5MTQsImV4cCI6MTYzMjA2Nzk1M30.TrbjNvfmvaLipQYjk8n4yEI2TLBQRoHhGF74-ZxVvzRDPs43bFT8DqEmVL9QoM-Ji0ftwYah-jrogLoDWkcbiQ","X-Lemonban-Media-Type":"lemonban.v2","Content-Type":"application/json;Charset=utf-8"}', data='{
 "member_id":1236912914,
 "amount":0.01
}', expect='{ 
"code": 0,
 "msg": "OK",
"data.leave_amount":500000.00
}', sqlCheck='{"select leave_amount from member where id =1236912914":"500000.00",
"select count(*) from financelog where pay_member_id=1236912914":1
}'}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testWithdraw -->
        <test-method status="PASS" signature="testWithdraw(com.lemon.until.ExcelData)[pri:0, instance:com.lemon.testcase.LemonWithdraw@2ba9f743]" name="testWithdraw" duration-ms="298" started-at="2021-09-19T16:07:36Z" data-provider="getData" finished-at="2021-09-19T16:07:36Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[ExcelData{case_id=2, module='withdraw', title='提现50万', method='post', address='/member/withdraw', headers='{"Authorization":"Bearer eyJhbGciOiJIUzUxMiJ9.eyJtZW1iZXJfaWQiOjEyMzY5MTI5MTQsImV4cCI6MTYzMjA2Nzk1M30.TrbjNvfmvaLipQYjk8n4yEI2TLBQRoHhGF74-ZxVvzRDPs43bFT8DqEmVL9QoM-Ji0ftwYah-jrogLoDWkcbiQ","X-Lemonban-Media-Type":"lemonban.v2","Content-Type":"application/json;Charset=utf-8"}', data='{
 "member_id":1236912914,
 "amount":500000.00
}', expect='{ 
"code": 0,
 "msg": "OK",
"data.leave_amount":0.00
}', sqlCheck='{"select leave_amount from member where id =1236912914":"0.00",
"select count(*) from financelog where pay_member_id=1236912914":2
}'}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testWithdraw -->
        <test-method status="PASS" signature="testWithdraw(com.lemon.until.ExcelData)[pri:0, instance:com.lemon.testcase.LemonWithdraw@2ba9f743]" name="testWithdraw" duration-ms="68" started-at="2021-09-19T16:07:36Z" data-provider="getData" finished-at="2021-09-19T16:07:36Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[ExcelData{case_id=3, module='withdraw', title='提现0元', method='post', address='/member/withdraw', headers='{"Authorization":"Bearer eyJhbGciOiJIUzUxMiJ9.eyJtZW1iZXJfaWQiOjEyMzY5MTI5MTQsImV4cCI6MTYzMjA2Nzk1M30.TrbjNvfmvaLipQYjk8n4yEI2TLBQRoHhGF74-ZxVvzRDPs43bFT8DqEmVL9QoM-Ji0ftwYah-jrogLoDWkcbiQ","X-Lemonban-Media-Type":"lemonban.v2","Content-Type":"application/json;Charset=utf-8"}', data='{
 "member_id":1236912914,
 "amount":0.00
}', expect='{ 
"code": 0,
 "msg":"OK",
"data.leave_amount":0.00
}', sqlCheck='null'}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testWithdraw -->
        <test-method status="PASS" signature="testWithdraw(com.lemon.until.ExcelData)[pri:0, instance:com.lemon.testcase.LemonWithdraw@2ba9f743]" name="testWithdraw" duration-ms="68" started-at="2021-09-19T16:07:36Z" data-provider="getData" finished-at="2021-09-19T16:07:36Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[ExcelData{case_id=4, module='withdraw', title='提现超出余额', method='post', address='/member/withdraw', headers='{"Authorization":"Bearer eyJhbGciOiJIUzUxMiJ9.eyJtZW1iZXJfaWQiOjEyMzY5MTI5MTQsImV4cCI6MTYzMjA2Nzk1M30.TrbjNvfmvaLipQYjk8n4yEI2TLBQRoHhGF74-ZxVvzRDPs43bFT8DqEmVL9QoM-Ji0ftwYah-jrogLoDWkcbiQ","X-Lemonban-Media-Type":"lemonban.v2","Content-Type":"application/json;Charset=utf-8"}', data='{
 "member_id":1236912914,
 "amount":0.01
}', expect='{
    "code": 1002,
    "msg": "余额不足"
}', sqlCheck='null'}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testWithdraw -->
        <test-method status="PASS" signature="testWithdraw(com.lemon.until.ExcelData)[pri:0, instance:com.lemon.testcase.LemonWithdraw@2ba9f743]" name="testWithdraw" duration-ms="62" started-at="2021-09-19T16:07:36Z" data-provider="getData" finished-at="2021-09-19T16:07:36Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[ExcelData{case_id=5, module='withdraw', title='提现负数', method='post', address='/member/withdraw', headers='{"Authorization":"Bearer eyJhbGciOiJIUzUxMiJ9.eyJtZW1iZXJfaWQiOjEyMzY5MTI5MTQsImV4cCI6MTYzMjA2Nzk1M30.TrbjNvfmvaLipQYjk8n4yEI2TLBQRoHhGF74-ZxVvzRDPs43bFT8DqEmVL9QoM-Ji0ftwYah-jrogLoDWkcbiQ","X-Lemonban-Media-Type":"lemonban.v2","Content-Type":"application/json;Charset=utf-8"}', data='{
 "member_id":1236912914,
 "amount":-1
}', expect='{ 
"code": 2,
 "msg":"余额必须大于0并且小于或者等于5000000"
}', sqlCheck='null'}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testWithdraw -->
        <test-method status="PASS" signature="testWithdraw(com.lemon.until.ExcelData)[pri:0, instance:com.lemon.testcase.LemonWithdraw@2ba9f743]" name="testWithdraw" duration-ms="61" started-at="2021-09-19T16:07:36Z" data-provider="getData" finished-at="2021-09-19T16:07:36Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[ExcelData{case_id=6, module='withdraw', title='提现3位小数', method='post', address='/member/withdraw', headers='{"Authorization":"Bearer eyJhbGciOiJIUzUxMiJ9.eyJtZW1iZXJfaWQiOjEyMzY5MTI5MTQsImV4cCI6MTYzMjA2Nzk1M30.TrbjNvfmvaLipQYjk8n4yEI2TLBQRoHhGF74-ZxVvzRDPs43bFT8DqEmVL9QoM-Ji0ftwYah-jrogLoDWkcbiQ","X-Lemonban-Media-Type":"lemonban.v2","Content-Type":"application/json;Charset=utf-8"}', data='{
 "member_id":1236912914,
 "amount":0.001
}', expect='{ 
"code": 2,
 "msg":"余额小数超过两位"
}', sqlCheck='null'}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testWithdraw -->
        <test-method status="PASS" signature="testWithdraw(com.lemon.until.ExcelData)[pri:0, instance:com.lemon.testcase.LemonWithdraw@2ba9f743]" name="testWithdraw" duration-ms="58" started-at="2021-09-19T16:07:36Z" data-provider="getData" finished-at="2021-09-19T16:07:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[ExcelData{case_id=7, module='withdraw', title='提现空字符串', method='post', address='/member/withdraw', headers='{"Authorization":"Bearer eyJhbGciOiJIUzUxMiJ9.eyJtZW1iZXJfaWQiOjEyMzY5MTI5MTQsImV4cCI6MTYzMjA2Nzk1M30.TrbjNvfmvaLipQYjk8n4yEI2TLBQRoHhGF74-ZxVvzRDPs43bFT8DqEmVL9QoM-Ji0ftwYah-jrogLoDWkcbiQ","X-Lemonban-Media-Type":"lemonban.v2","Content-Type":"application/json;Charset=utf-8"}', data='{
 "member_id":1236912914,
 "amount":""
}', expect='{ 
"code": 1,
 "msg": "余额为空"
}', sqlCheck='null'}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testWithdraw -->
        <test-method status="PASS" signature="testWithdraw(com.lemon.until.ExcelData)[pri:0, instance:com.lemon.testcase.LemonWithdraw@2ba9f743]" name="testWithdraw" duration-ms="54" started-at="2021-09-19T16:07:37Z" data-provider="getData" finished-at="2021-09-19T16:07:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[ExcelData{case_id=8, module='withdraw', title='提现金额非数字类型', method='post', address='/member/withdraw', headers='{"Authorization":"Bearer eyJhbGciOiJIUzUxMiJ9.eyJtZW1iZXJfaWQiOjEyMzY5MTI5MTQsImV4cCI6MTYzMjA2Nzk1M30.TrbjNvfmvaLipQYjk8n4yEI2TLBQRoHhGF74-ZxVvzRDPs43bFT8DqEmVL9QoM-Ji0ftwYah-jrogLoDWkcbiQ","X-Lemonban-Media-Type":"lemonban.v2","Content-Type":"application/json;Charset=utf-8"}', data='{
 "member_id":1236912914,
 "amount":"ss"
}', expect='{ 
"code": 2,
 "msg":"数值参数格式不正确"
}', sqlCheck='null'}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testWithdraw -->
        <test-method status="PASS" signature="testWithdraw(com.lemon.until.ExcelData)[pri:0, instance:com.lemon.testcase.LemonWithdraw@2ba9f743]" name="testWithdraw" duration-ms="54" started-at="2021-09-19T16:07:37Z" data-provider="getData" finished-at="2021-09-19T16:07:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[ExcelData{case_id=9, module='withdraw', title='充值id不存在', method='post', address='/member/withdraw', headers='{"Authorization":"Bearer eyJhbGciOiJIUzUxMiJ9.eyJtZW1iZXJfaWQiOjEyMzY5MTI5MTQsImV4cCI6MTYzMjA2Nzk1M30.TrbjNvfmvaLipQYjk8n4yEI2TLBQRoHhGF74-ZxVvzRDPs43bFT8DqEmVL9QoM-Ji0ftwYah-jrogLoDWkcbiQ","X-Lemonban-Media-Type":"lemonban.v2","Content-Type":"application/json;Charset=utf-8"}', data='{
 "member_id":"113543645",
 "amount":0.01
}', expect='{ 
"code": 2,
 "msg":"会员不存在"
}', sqlCheck='null'}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testWithdraw -->
        <test-method status="PASS" signature="testWithdraw(com.lemon.until.ExcelData)[pri:0, instance:com.lemon.testcase.LemonWithdraw@2ba9f743]" name="testWithdraw" duration-ms="63" started-at="2021-09-19T16:07:37Z" data-provider="getData" finished-at="2021-09-19T16:07:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[ExcelData{case_id=10, module='withdraw', title='提现id为空', method='post', address='/member/withdraw', headers='{"Authorization":"Bearer eyJhbGciOiJIUzUxMiJ9.eyJtZW1iZXJfaWQiOjEyMzY5MTI5MTQsImV4cCI6MTYzMjA2Nzk1M30.TrbjNvfmvaLipQYjk8n4yEI2TLBQRoHhGF74-ZxVvzRDPs43bFT8DqEmVL9QoM-Ji0ftwYah-jrogLoDWkcbiQ","X-Lemonban-Media-Type":"lemonban.v2","Content-Type":"application/json;Charset=utf-8"}', data='{
 "member_id":"",
 "amount":0.01
}', expect='{ 
"code": 1,
 "msg":"会员id为空"
}', sqlCheck='null'}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testWithdraw -->
      </class> <!-- com.lemon.testcase.LemonWithdraw -->
      <class name="com.lemon.testcase.LemonRecharge">
        <test-method status="PASS" signature="setup()[pri:0, instance:com.lemon.testcase.LemonRecharge@2cacd55e]" name="setup" is-config="true" duration-ms="68" started-at="2021-09-19T16:07:34Z" finished-at="2021-09-19T16:07:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="testRecharge(com.lemon.until.ExcelData)[pri:0, instance:com.lemon.testcase.LemonRecharge@2cacd55e]" name="testRecharge" duration-ms="374" started-at="2021-09-19T16:07:34Z" data-provider="getData" finished-at="2021-09-19T16:07:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[ExcelData{case_id=1, module='recharge', title='充值0.01元', method='post', address='/member/recharge', headers='{"Authorization":"Bearer eyJhbGciOiJIUzUxMiJ9.eyJtZW1iZXJfaWQiOjEyMzY5MTI5MTQsImV4cCI6MTYzMjA2Nzk1M30.TrbjNvfmvaLipQYjk8n4yEI2TLBQRoHhGF74-ZxVvzRDPs43bFT8DqEmVL9QoM-Ji0ftwYah-jrogLoDWkcbiQ","X-Lemonban-Media-Type":"lemonban.v2","Content-Type":"application/json;Charset=utf-8"}', data='{
 "member_id":1236912914,
 "amount":0.01
}', expect='{ 
"code": 0,
 "msg": "OK",
"data.leave_amount":0.01
}', sqlCheck='{"select leave_amount from member where id =1236912914":0.01,
"select count(*) from financelog where income_member_id=1236912914":1
}'}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRecharge -->
        <test-method status="PASS" signature="testRecharge(com.lemon.until.ExcelData)[pri:0, instance:com.lemon.testcase.LemonRecharge@2cacd55e]" name="testRecharge" duration-ms="292" started-at="2021-09-19T16:07:35Z" data-provider="getData" finished-at="2021-09-19T16:07:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[ExcelData{case_id=2, module='recharge', title='充值50万', method='post', address='/member/recharge', headers='{"Authorization":"Bearer eyJhbGciOiJIUzUxMiJ9.eyJtZW1iZXJfaWQiOjEyMzY5MTI5MTQsImV4cCI6MTYzMjA2Nzk1M30.TrbjNvfmvaLipQYjk8n4yEI2TLBQRoHhGF74-ZxVvzRDPs43bFT8DqEmVL9QoM-Ji0ftwYah-jrogLoDWkcbiQ","X-Lemonban-Media-Type":"lemonban.v2","Content-Type":"application/json;Charset=utf-8"}', data='{
 "member_id":1236912914,
 "amount":500000.00
}', expect='{ 
"code": 0,
 "msg": "OK",
"data.leave_amount":500000.01
}', sqlCheck='{"select leave_amount from member where id =1236912914":500000.01,
"select count(*) from financelog where income_member_id=1236912914":2
}'}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRecharge -->
        <test-method status="PASS" signature="testRecharge(com.lemon.until.ExcelData)[pri:0, instance:com.lemon.testcase.LemonRecharge@2cacd55e]" name="testRecharge" duration-ms="92" started-at="2021-09-19T16:07:35Z" data-provider="getData" finished-at="2021-09-19T16:07:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[ExcelData{case_id=3, module='recharge', title='充值0元', method='post', address='/member/recharge', headers='{"Authorization":"Bearer eyJhbGciOiJIUzUxMiJ9.eyJtZW1iZXJfaWQiOjEyMzY5MTI5MTQsImV4cCI6MTYzMjA2Nzk1M30.TrbjNvfmvaLipQYjk8n4yEI2TLBQRoHhGF74-ZxVvzRDPs43bFT8DqEmVL9QoM-Ji0ftwYah-jrogLoDWkcbiQ","X-Lemonban-Media-Type":"lemonban.v2","Content-Type":"application/json;Charset=utf-8"}', data='{
 "member_id":1236912914,
 "amount":0
}', expect='{ 
"code": 0,
 "msg":"OK",
"data.leave_amount":500000.01
}', sqlCheck='null'}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRecharge -->
        <test-method status="PASS" signature="testRecharge(com.lemon.until.ExcelData)[pri:0, instance:com.lemon.testcase.LemonRecharge@2cacd55e]" name="testRecharge" duration-ms="52" started-at="2021-09-19T16:07:35Z" data-provider="getData" finished-at="2021-09-19T16:07:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[ExcelData{case_id=4, module='recharge', title='充值大于500000元', method='post', address='/member/recharge', headers='{"Authorization":"Bearer eyJhbGciOiJIUzUxMiJ9.eyJtZW1iZXJfaWQiOjEyMzY5MTI5MTQsImV4cCI6MTYzMjA2Nzk1M30.TrbjNvfmvaLipQYjk8n4yEI2TLBQRoHhGF74-ZxVvzRDPs43bFT8DqEmVL9QoM-Ji0ftwYah-jrogLoDWkcbiQ","X-Lemonban-Media-Type":"lemonban.v2","Content-Type":"application/json;Charset=utf-8"}', data='{
 "member_id":1236912914,
 "amount":500000.01
}', expect='{ 
"code": 2,
 "msg":"余额必须大于0并且小于或者等于500000"
}', sqlCheck='null'}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRecharge -->
        <test-method status="PASS" signature="testRecharge(com.lemon.until.ExcelData)[pri:0, instance:com.lemon.testcase.LemonRecharge@2cacd55e]" name="testRecharge" duration-ms="50" started-at="2021-09-19T16:07:35Z" data-provider="getData" finished-at="2021-09-19T16:07:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[ExcelData{case_id=5, module='recharge', title='充值负数', method='post', address='/member/recharge', headers='{"Authorization":"Bearer eyJhbGciOiJIUzUxMiJ9.eyJtZW1iZXJfaWQiOjEyMzY5MTI5MTQsImV4cCI6MTYzMjA2Nzk1M30.TrbjNvfmvaLipQYjk8n4yEI2TLBQRoHhGF74-ZxVvzRDPs43bFT8DqEmVL9QoM-Ji0ftwYah-jrogLoDWkcbiQ","X-Lemonban-Media-Type":"lemonban.v2","Content-Type":"application/json;Charset=utf-8"}', data='{
 "member_id":1236912914,
 "amount":-1
}', expect='{ 
"code": 2,
 "msg":"余额必须大于0并且小于或者等于500000"
}', sqlCheck='null'}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRecharge -->
        <test-method status="PASS" signature="testRecharge(com.lemon.until.ExcelData)[pri:0, instance:com.lemon.testcase.LemonRecharge@2cacd55e]" name="testRecharge" duration-ms="53" started-at="2021-09-19T16:07:35Z" data-provider="getData" finished-at="2021-09-19T16:07:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[ExcelData{case_id=6, module='recharge', title='充值三位小数', method='post', address='/member/recharge', headers='{"Authorization":"Bearer eyJhbGciOiJIUzUxMiJ9.eyJtZW1iZXJfaWQiOjEyMzY5MTI5MTQsImV4cCI6MTYzMjA2Nzk1M30.TrbjNvfmvaLipQYjk8n4yEI2TLBQRoHhGF74-ZxVvzRDPs43bFT8DqEmVL9QoM-Ji0ftwYah-jrogLoDWkcbiQ","X-Lemonban-Media-Type":"lemonban.v2","Content-Type":"application/json;Charset=utf-8"}', data='{
 "member_id":1236912914,
 "amount":0.001
}', expect='{ 
"code": 2,
 "msg":"余额小数超过两位"
}', sqlCheck='null'}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRecharge -->
        <test-method status="PASS" signature="testRecharge(com.lemon.until.ExcelData)[pri:0, instance:com.lemon.testcase.LemonRecharge@2cacd55e]" name="testRecharge" duration-ms="53" started-at="2021-09-19T16:07:35Z" data-provider="getData" finished-at="2021-09-19T16:07:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[ExcelData{case_id=7, module='recharge', title='充值空字符串', method='post', address='/member/recharge', headers='{"Authorization":"Bearer eyJhbGciOiJIUzUxMiJ9.eyJtZW1iZXJfaWQiOjEyMzY5MTI5MTQsImV4cCI6MTYzMjA2Nzk1M30.TrbjNvfmvaLipQYjk8n4yEI2TLBQRoHhGF74-ZxVvzRDPs43bFT8DqEmVL9QoM-Ji0ftwYah-jrogLoDWkcbiQ","X-Lemonban-Media-Type":"lemonban.v2","Content-Type":"application/json;Charset=utf-8"}', data='{
 "member_id":1236912914,
 "amount":""
}', expect='{ 
"code": 1,
 "msg": "余额为空"
}', sqlCheck='null'}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRecharge -->
        <test-method status="PASS" signature="testRecharge(com.lemon.until.ExcelData)[pri:0, instance:com.lemon.testcase.LemonRecharge@2cacd55e]" name="testRecharge" duration-ms="51" started-at="2021-09-19T16:07:35Z" data-provider="getData" finished-at="2021-09-19T16:07:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[ExcelData{case_id=8, module='recharge', title='充值非数字类型', method='post', address='/member/recharge', headers='{"Authorization":"Bearer eyJhbGciOiJIUzUxMiJ9.eyJtZW1iZXJfaWQiOjEyMzY5MTI5MTQsImV4cCI6MTYzMjA2Nzk1M30.TrbjNvfmvaLipQYjk8n4yEI2TLBQRoHhGF74-ZxVvzRDPs43bFT8DqEmVL9QoM-Ji0ftwYah-jrogLoDWkcbiQ","X-Lemonban-Media-Type":"lemonban.v2","Content-Type":"application/json;Charset=utf-8"}', data='{
 "member_id":1236912914,
 "amount":"ss"
}', expect='{ 
"code": 2,
 "msg":"余额必须为数值型"
}', sqlCheck='null'}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRecharge -->
        <test-method status="PASS" signature="testRecharge(com.lemon.until.ExcelData)[pri:0, instance:com.lemon.testcase.LemonRecharge@2cacd55e]" name="testRecharge" duration-ms="61" started-at="2021-09-19T16:07:35Z" data-provider="getData" finished-at="2021-09-19T16:07:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[ExcelData{case_id=9, module='recharge', title='充值id不存在', method='post', address='/member/recharge', headers='{"Authorization":"Bearer eyJhbGciOiJIUzUxMiJ9.eyJtZW1iZXJfaWQiOjEyMzY5MTI5MTQsImV4cCI6MTYzMjA2Nzk1M30.TrbjNvfmvaLipQYjk8n4yEI2TLBQRoHhGF74-ZxVvzRDPs43bFT8DqEmVL9QoM-Ji0ftwYah-jrogLoDWkcbiQ","X-Lemonban-Media-Type":"lemonban.v2","Content-Type":"application/json;Charset=utf-8"}', data='{
 "member_id":"113543645",
 "amount":0.01
}', expect='{ 
"code": 1007,
 "msg":"无权限访问，请检查参数"
}', sqlCheck='null'}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRecharge -->
        <test-method status="PASS" signature="testRecharge(com.lemon.until.ExcelData)[pri:0, instance:com.lemon.testcase.LemonRecharge@2cacd55e]" name="testRecharge" duration-ms="60" started-at="2021-09-19T16:07:35Z" data-provider="getData" finished-at="2021-09-19T16:07:36Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[ExcelData{case_id=10, module='recharge', title='充值id为空', method='post', address='/member/recharge', headers='{"Authorization":"Bearer eyJhbGciOiJIUzUxMiJ9.eyJtZW1iZXJfaWQiOjEyMzY5MTI5MTQsImV4cCI6MTYzMjA2Nzk1M30.TrbjNvfmvaLipQYjk8n4yEI2TLBQRoHhGF74-ZxVvzRDPs43bFT8DqEmVL9QoM-Ji0ftwYah-jrogLoDWkcbiQ","X-Lemonban-Media-Type":"lemonban.v2","Content-Type":"application/json;Charset=utf-8"}', data='{
 "member_id":"",
 "amount":0.01
}', expect='{ 
"code": 1,
 "msg":"用户id为空"
}', sqlCheck='null'}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRecharge -->
      </class> <!-- com.lemon.testcase.LemonRecharge -->
      <class name="com.lemon.testcase.LemonAudit">
        <test-method status="PASS" signature="setup()[pri:0, instance:com.lemon.testcase.LemonAudit@75f65d54]" name="setup" is-config="true" duration-ms="32" started-at="2021-09-19T16:07:38Z" finished-at="2021-09-19T16:07:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="testAudit(com.lemon.until.ExcelData)[pri:0, instance:com.lemon.testcase.LemonAudit@75f65d54]" name="testAudit" duration-ms="81" started-at="2021-09-19T16:07:38Z" data-provider="getData" finished-at="2021-09-19T16:07:38Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[ExcelData{case_id=1, module='audit', title='管理员审核借款项目', method='PATCH', address='/loan/audit', headers='{"Authorization":"Bearer eyJhbGciOiJIUzUxMiJ9.eyJtZW1iZXJfaWQiOjEyMzY5MTI5MTYsImV4cCI6MTYzMjA2Nzk1NH0.TiSIG0y183KGYeFvyMUozIFTeT-d73H0FUCder9e8DdfINdtF01vb2syRZVK2_aF2IoAns3eFk-Kcbo9I0T0Fw","X-Lemonban-Media-Type":"lemonban.v2","Content-Type":"application/json;Charset=utf-8"}', data='{
 "loan_id":118970,
 "approved_or_not":true
}', expect='{
    "code": 0,
    "msg": "OK"
}', sqlCheck='null'}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAudit -->
        <test-method status="PASS" signature="testAudit(com.lemon.until.ExcelData)[pri:0, instance:com.lemon.testcase.LemonAudit@75f65d54]" name="testAudit" duration-ms="68" started-at="2021-09-19T16:07:38Z" data-provider="getData" finished-at="2021-09-19T16:07:38Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[ExcelData{case_id=2, module='audit', title='管理员审核借款项目', method='PATCH', address='/loan/audit', headers='{"Authorization":"Bearer eyJhbGciOiJIUzUxMiJ9.eyJtZW1iZXJfaWQiOjEyMzY5MTI5MTYsImV4cCI6MTYzMjA2Nzk1NH0.TiSIG0y183KGYeFvyMUozIFTeT-d73H0FUCder9e8DdfINdtF01vb2syRZVK2_aF2IoAns3eFk-Kcbo9I0T0Fw","X-Lemonban-Media-Type":"lemonban.v2","Content-Type":"application/json;Charset=utf-8"}', data='{
 "loan_id":118971,
 "approved_or_not":false
}', expect='{
    "code": 0,
    "msg": "OK"
}', sqlCheck='null'}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAudit -->
        <test-method status="PASS" signature="testAudit(com.lemon.until.ExcelData)[pri:0, instance:com.lemon.testcase.LemonAudit@75f65d54]" name="testAudit" duration-ms="55" started-at="2021-09-19T16:07:38Z" data-provider="getData" finished-at="2021-09-19T16:07:38Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[ExcelData{case_id=3, module='audit', title='管理员审核借款项目,项目状态不为1', method='PATCH', address='/loan/audit', headers='{"Authorization":"Bearer eyJhbGciOiJIUzUxMiJ9.eyJtZW1iZXJfaWQiOjEyMzY5MTI5MTYsImV4cCI6MTYzMjA2Nzk1NH0.TiSIG0y183KGYeFvyMUozIFTeT-d73H0FUCder9e8DdfINdtF01vb2syRZVK2_aF2IoAns3eFk-Kcbo9I0T0Fw","X-Lemonban-Media-Type":"lemonban.v2","Content-Type":"application/json;Charset=utf-8"}', data='{
 "loan_id":118970,
 "approved_or_not":true
}', expect='{
    "code": 2,
    "msg": "项目不在审核中状态"
}', sqlCheck='null'}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAudit -->
      </class> <!-- com.lemon.testcase.LemonAudit -->
    </test> <!-- C:/Users/SEMON/IdeaProjects/Java_project -->
  </suite> <!-- 接口1 -->
</testng-results>
